THE NOW:


todo:
-----
0. get into a nice workflow
   a. push code to git
   b. become familar with the testing technologies for angular.js
      1. jasmine
      2. karma
      ect.


Website:

Administration Panel for adding, updating and deleting content
  Authentication :
  Social OAuth Authentication Scala Plugin
       1. cookie based authentication
       2. session based authentication
       3. token based
       	  e.g. OAuth 2.0
	  task: access private user data with an authorized request i.e. authorized request made by a web server application
	  STEP 1: obtain a access token, and sometimes a refresh token
	     a. obtain an authorization code
	     	1. application redirects a users browser to a Google URL
		i.e. URL with query paramerters indicating the type of access
		requested e.g.  user authentication, session selection, or user consent
		2. Google's authentication server returns an authorization code
	     b. application sends the authorization code, 
	     client id and the client secret to google's authentication server to obtain a access token (and sometimes a refresh token)
	     	- access token : used to authenticate on the user's behalf
		NOTE: access tokens have an expiration date
		- refresh token : a token that will allow you to retrieve a new access token (from Google's Authentication servers)
		 when the initial access token expires
	  STEP 2: send an authorized partial request with the access token to an API e.g. YouTube API
         4. authentication using an API key i.e. unauthorized requests
       	 
       
       a. create a secured action 
       i.e. an action that requires pre-authorization
        - authorization information in the header of request packet

homepage:
    a. carousel - full width
       1. features a still images : 1) weekly artist interview, 2) live perforance feature 3) feature artist releases
         a. images and buttons on images link to distinct videos
         b. every weekly feature must be archived and searchable
    NOTE: backend interface is needed for Jen to update the weekly content
    - basic authentication system for one or more administerial users
      
    b. video gallery
       1. a gallery of video interviews indexable by artist and date of interview
       NOTE: it is important to notify social media about views of the videos
       - embedding a youtube video OR interfacing with the youTube API to increment the view counter


        c. navbar - Home, Interviews, Performances, Features, New Releases, Podcast
       Interviews - video gallery of artist interviews indexable by artist and date
                   - 2 collums of videos in box widgets
                  - drop down menu
               - search field
               - social media widget for tweeting, liking, google+ing, sharing with social media, link to band website in new tab
               - right sidebar for ads
               how to tastefully place ads?
               banner adds at the top - cycling - google ads?
           Performances - ''
      
       Music Videos Gallery (current artists) - video gallery connected to a database with all current artist music videos
             - indexable by artist
            NOTE: Jen will get these video files directly from the labels and a drag and drop uploader to put the videos into the
         database
         what is the cheapest tertiary storage option?
         how can
            
      
       Features page - featuring an artist of the week or an event e.g. CBGB festival, CMJ ect.
       - some sort media object with a picture and a long text
            b. band profile i.e. bio
	    - photo, link of band website, description of band, title
            c. upcoming tour dates - list of dates
               - table of information i.e. name, city, state, venue
            d. premier content i.e. exclusive music video and streaming entire new CD i.e. music player
       NOTE: features also need to be archived and indexable by artist
       
           
	   
            704 West End Ave. Apt. 5A

           
      	   Releases
	   a. new releases - audio player with list of audio
               1. video gallery connect to a database with music videos
	   
      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

THE VISION:

MAIN IDEA: Virtual Storefront for Musicians and Other Artists i.e. Music News Reccommendation System and Advertizing Platform for Artists, Labels, and Venues
  A community of artist/label/venue profiles sourcing their preferences and information about music, the news, popular culture, brands, touring ect.
  NOTE: look at artist profiles on Reverbnation
      search filters:
    - artist name
    - genre
    - location
    - label
 
  : users should be able to search our database for an artist or a label
  and find news with targeted advertizing about various artists AND
  tour dates for those artists AND
  a map of their intented tour route AND
 
 
 
  artist profiles
  i.e. first, rock musicians, then other types of artists
     - news articles should be allowed to be organized by certain parameters
        1. By chronical order certain publication date
    i.e. from most recent to less recent
      a. by chronical order and artist ect.
      (different combinations of filters)
    2. By tour date?
    3. By type of rock e.g. Alternative, Industrial, Goth, EBM ect.

    NOTE: it is the intention of this application to expose the underground,
    therefore the popularity of the genre is irrelevant
   NOTE: news personalization i.e. analytics IS done after the basic artist / label / tour date / tour route database is built
  

KEY QUESTION :
??? But how is the information about tour dates going to be found OR extracted from the raw data that we mine? ???
     
  b. featured artist / artists page (select few evaluated by Jen)
    - link to artist website
    - link to music (SoundCloud, Spotify, YouTube)
    - link to buy music and link to tour dates
    - Map of tour route
      NOTE: tour dates AND Map of tour routes obtained
      from data mined or other API
    -  band profile
   
  c. Tour date information page
     : a more general interface for looking at tour dates
 
   c. registration system and publication/subscription system for newletter and podcast via RSS feed or other conventional mechanism
     - newsletter and podcast is advertized via a mailing system that maintains a mailing list
     - the email sent is the newletter
  
   d. links to RockThis social media presence and interfacing with social media ecosystem via APIs

administration panel:
           functions:
        a. add new video content to a video gallery / database
               b. allow for the adding of new tour dates ?
        NOTE: if data is mined and extracted what is the point?
               c. inteface for Jen's personal blog entries i.e. music features

Selecting a template:
      0. the other boxy looking magazine template
      1. Music-Nation


-------

Marc Council:

1. WS.url(url)
2. chained timeout, signature from an oauth calculator pulling the configs from the application.conf 
3. finally a wild card get from the url 
NOTE: You wouldnt need the tweet iteratee either since you dont have to process by chunking
But its an example of the signature and code flow... this is more advanced but you can see how it comes together


---------------------------------------------------------------------------------------------------------------

// gets the channel information page
    /*
    issue a GET request for 0 or more channel resources from
    RockThisTV channel i.e. channel id = UCcI0m9UxYNgZXg2YPqTmp0A
    "key" -> "API key"
    */
    /*
    val responseFuture: Future[Response] = WS.url("https://www.googleapis.com/youtube/v3/channels")
      .withQueryString(
        "key" -> "AIzaSyB0eeTtUnrGityYT4kQmOjZu2PnCLNewyg",
        "part" -> "snippet,invideoPromotion",
        "fields" -> "items(snippet(publishedAt,title,description,thumbnails),invideoPromotion(items))",
        "id" -> "UCcI0m9UxYNgZXg2YPqTmp0A").get
    */

    /*
    issue a GET request for all videos concerning RockThisTV channel
    NOTE: ordered by date i.e. more recent to less recent and limited to 50 / 84 results
    i.e. channel id = UCcI0m9UxYNgZXg2YPqTmp0A
     */
    /*
    val responseFuture: Future[Response] = WS.url("https://www.googleapis.com/youtube/v3/search")
      .withQueryString(
        "key" -> "AIzaSyB0eeTtUnrGityYT4kQmOjZu2PnCLNewyg",
        "part" -> "snippet",
        "fields" -> "items(id,snippet(publishedAt,title,description,thumbnails))",
        "channelId" -> "UCcI0m9UxYNgZXg2YPqTmp0A",
        "order" -> "date",
        "maxResults" -> "50",
        "type" -> "video"
      ).get
      */